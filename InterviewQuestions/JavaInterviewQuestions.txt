http://www.techinterviews.com/good-questions-asked-during-java-interview

Good questions asked during Java interview


Is “abc” a primitive value?
Answer: The String literal “abc” is not a primitive value. It is a String object.

What restrictions are placed on the values of each case of a switch statement?
Answer: During compilation, the values of each case of a switch statement must evaluate to a value that can be promoted to an int value.

What modifiers may be used with an interface declaration?
Answer: An interface may be declared as public or abstract.

Is a class a subclass of itself?
Answer: A class is a subclass of itself.

What is the difference between a while statement and a do statement?
Answer: A while statement checks at the beginning of a loop to see whether the next loop iteration should occur. A do statement checks at the end of a loop to see whether the next iteration of a loop should occur. The do statement will always execute the body of a loop at least once.

What modifiers can be used with a local inner class?
Answer: A local inner class may be final or abstract.

What is the purpose of the File class?
Answer: The File class is used to create objects that provide access to the files and directories of a local file system.

Can an exception be rethrown?
Answer: Yes, an exception can be rethrown.

When does the compiler supply a default constructor for a class?
Answer: The compiler supplies a default constructor for a class if no other constructors are provided.

If a method is declared as protected, where may the method be accessed?
Answer: A protected method may only be accessed by classes or interfaces of the same package or by subclasses of the class in which it is declared.

Which non-Unicode letter characters may be used as the first character of an identifier?
Answer: The non-Unicode letter characters $ and _ may appear as the first character of an identifier

What restrictions are placed on method overloading?
Answer: Two methods may not have the same name and argument list but different return types.

What is casting?
Answer: There are two types of casting, casting between primitive numeric types and casting between object references. Casting between numeric types is used to convert larger values, such as double values, to smaller values, such as byte values. Casting between object references is used to refer to an object by a compatible class, interface, or array type reference.

What is the return type of a program’s main() method?
Answer: A program’s main() method has a void return type.

What class of exceptions are generated by the Java run-time system?
Answer: The Java runtime system generates RuntimeException and Error exceptions.

What class allows you to read objects directly from a stream?
Answer: The ObjectInputStream class supports the reading of objects from input streams.

What is the difference between a field variable and a local variable?
Answer: A field variable is a variable that is declared as a member of a class. A local variable is a variable that is declared local to a method.

How are this() and super() used with constructors?
Answer: this() is used to invoke a constructor of the same class. super() is used to invoke a superclass constructor.

What is the relationship between a method’s throws clause and the exceptions that can be thrown during the method’s execution?
Answer: A method’s throws clause must declare any checked exceptions that are not caught within the body of the method.

Why are the methods of the Math class static?
Answer: So they can be invoked as if they are a mathematical code library.

What are the legal operands of the instanceof operator?
Answer: The left operand is an object reference or null value and the right operand is a class, interface, or array type.

What an I/O filter?
Answer: An I/O filter is an object that reads from one stream and writes to another, usually altering the data in some way as it is passed from one stream to another.

If an object is garbage collected, can it become reachable again?
Answer: Once an object is garbage collected, it ceases to exist. It can no longer become reachable again.

What are E and PI?
Answer: E is the base of the natural logarithm and PI is mathematical value pi.

Are true and false keywords?
Answer: The values true and false are not keywords.

What is the difference between the File and RandomAccessFile classes?
Answer: The File class encapsulates the files and directories of the local file system. The RandomAccessFile class provides the methods needed to directly access data contained in any part of a file.

What happens when you add a double value to a String?
Answer: The result is a String object.

What is your platform’s default character encoding?
Answer: If you are running Java on English Windows platforms, it is probably Cp1252. If you are running Java on English Solaris platforms, it is most likely 8859_1.

Which package is always imported by default?
Answer: The java.lang package is always imported by default.

What interface must an object implement before it can be written to a stream as an object?
Answer: An object must implement the Serializable or Externalizable interface before it can be written to a stream as an object.

How can my application get to know when a HttpSession is removed?
Answer: Define a Class HttpSessionNotifier which implements HttpSessionBindingListener and implement the functionality what you need in valueUnbound() method. Create an instance of that class and put that instance in HttpSession.

Whats the difference between notify() and notifyAll()?
Answer: notify() is used to unblock one waiting thread; notifyAll() is used to unblock all of them. Using notify() is preferable (for efficiency) when only one blocked thread can benefit from the change (for example, when freeing a buffer back into a pool). notifyAll() is necessary (for correctness) if multiple threads should resume (for example, when releasing a “writer” lock on a file might permit all “readers” to resume).

Why can’t I say just abs() or sin() instead of Math.abs() and Math.sin()?
Answer: The import statement does not bring methods into your local name space. It lets you abbreviate class names, but not get rid of them altogether. That’s just the way it works, you’ll get used to it. It’s really a lot safer this way. 
However, there is actually a little trick you can use in some cases that gets you what you want. If your top-level class doesn’t need to inherit from anything else, make it inherit from java.lang.Math. That *does* bring all the methods into your local name space. But you can’t use this trick in an applet, because you have to inherit from java.awt.Applet. And actually, you can’t use it on java.lang.Math at all, because Math is a “final” class which means it can’t be extended.

Why are there no global variables in Java?
Answer: Global variables are considered bad form for a variety of reasons: Adding state variables breaks referential transparency (you no longer can understand a statement or expression on its own: you need to understand it in the context of the settings of the global variables), State variables lessen the cohesion of a program: you need to know more to understand how something works. A major point of Object-Oriented programming is to break up global state into more easily understood collections of local state, When you add one variable, you limit the use of your program to one instance. What you thought was global, someone else might think of as local: they may want to run two copies of your program at once. For these reasons, Java decided to ban global variables.

What does it mean that a class or member is final?
Answer: A final class can no longer be subclassed. Mostly this is done for security reasons with basic classes like String and Integer. It also allows the compiler to make some optimizations, and makes thread safety a little easier to achieve. Methods may be declared final as well. This means they may not be overridden in a subclass. Fields can be declared final, too. However, this has a completely different meaning. A final field cannot be changed after it’s initialized, and it must include an initializer statement where it’s declared. For example, public final double c = 2.998; It’s also possible to make a static field final to get the effect of C++’s const statement or some uses of C’s #define, e.g. public static final double c = 2.998;

What does it mean that a method or class is abstract?
Answer: An abstract class cannot be instantiated. Only its subclasses can be instantiated. You indicate that a class is abstract with the abstract keyword like this:

	public abstract class Container extends Component {

Abstract classes may contain abstract methods. A method declared abstract is not actually implemented in the current class. It exists only to be overridden in subclasses. It has no body. For example,

	public abstract float price();

Abstract methods may only be included in abstract classes. However, an abstract class is not required to have any abstract methods, though most of them do. Each subclass of an abstract class must override the abstract methods of its superclasses or itself be declared abstract.



What is a transient variable?
Answer: transient variable is a variable that may not be serialized.

How are Observer and Observable used?
Answer: Objects that subclass the Observable class maintain a list of observers. When an Observable object is updated it invokes the update() method of each of its observers to notify the observers that it has changed state. The Observer interface is implemented by objects that observe Observable objects.

Can a lock be acquired on a class?
Answer: Yes, a lock can be acquired on a class. This lock is acquired on the class’s Class object.

What state does a thread enter when it terminates its processing?
Answer: When a thread terminates its processing, it enters the dead state.

How does Java handle integer overflows and underflows?
Answer: It uses those low order bytes of the result that can fit into the size of the type allowed by the operation.

What is the difference between the >> and >>> operators?
Answer: The >> operator carries the sign bit when shifting right. The >>> zero-fills bits that have been shifted out.

Is sizeof a keyword?
Answer: The sizeof operator is not a keyword.

Does garbage collection guarantee that a program will not run out of memory?
Answer: Garbage collection does not guarantee that a program will not run out of memory. It is possible for programs to use up memory resources faster than they are garbage collected. It is also possible for programs to create objects that are not subject to garbage collection

Can an object’s finalize() method be invoked while it is reachable?
Answer: An object’s finalize() method cannot be invoked by the garbage collector while the object is still reachable. However, an object’s finalize() method may be invoked by other objects.

What value does readLine() return when it has reached the end of a file?
Answer: The readLine() method returns null when it has reached the end of a file.

Can a for statement loop indefinitely?
Answer: Yes, a for statement can loop indefinitely. For example, consider the following: for(;;) ;

To what value is a variable of the String type automatically initialized?
Answer: The default value of an String type is null.

What is a task’s priority and how is it used in scheduling?
Answer: A task’s priority is an integer value that identifies the relative order in which it should be executed with respect to other tasks. The scheduler attempts to schedule higher priority tasks before lower priority tasks.

What is the range of the short type?
Answer: The range of the short type is -(2^15) to 2^15 - 1.

What is the purpose of garbage collection?
Answer: The purpose of garbage collection is to identify and discard objects that are no longer needed by a program so that their resources may be reclaimed and reused.

What do you understand by private, protected and public?
Answer: These are accessibility modifiers. Private is the most restrictive, while public is the least restrictive. There is no real difference between protected and the default type (also known as package protected) within the context of the same package, however the protected keyword allows visibility to a derived class in a different package.

What is Downcasting ?
Answer: Downcasting is the casting from a general to a more specific type, i.e. casting down the hierarchy

Can a method be overloaded based on different return type but same argument type ?
Answer: No, because the methods can be called without using their return type in which case there is ambiquity for the compiler

What happens to a static var that is defined within a method of a class ?
Answer: Can’t do it. You’ll get a compilation error

How many static init can you have ?
Answer: As many as you want, but the static initializers and class variable initializers are executed in textual order and may not refer to class variables declared in the class whose declarations appear textually after the use, even though these class variables are in scope.

What is the difference amongst JVM Spec, JVM Implementation, JVM Runtime ?
Answer: The JVM spec is the blueprint for the JVM generated and owned by Sun. The JVM implementation is the actual implementation of the spec by a vendor and the JVM runtime is the actual running instance of a JVM implementation

Describe what happens when an object is created in Java?
Answer: Several things happen in a particular order to ensure the object is constructed properly: Memory is allocated from heap to hold all instance variables and implementation-specific data of the object and its superclasses. Implemenation-specific data includes pointers to class and method data. The instance variables of the objects are initialized to their default values. The constructor for the most derived class is invoked. The first thing a constructor does is call the consctructor for its superclasses. This process continues until the constrcutor for java.lang.Object is called, as java.lang.Object is the base class for all objects in java. Before the body of the constructor is executed, all instance variable initializers and initialization blocks are executed. Then the body of the constructor is executed. Thus, the constructor for the base class completes first and constructor for the most derived class completes last.

What does the “final” keyword mean in front of a variable? A method? A class?
Answer: FINAL for a variable: value is constant. FINAL for a method: cannot be overridden. FINAL for a class: cannot be derived

What is the difference between instanceof and isInstance?
Answer: instanceof is used to check to see if an object can be cast into a specified type without throwing a cast class exception. isInstance() Determines if the specified Object is assignment-compatible with the object represented by this Class. This method is the dynamic equivalent of the Java language instanceof operator. The method returns true if the specified Object argument is non-null and can be cast to the reference type represented by this Class object without raising a ClassCastException. It returns false otherwise.

Why does it take so much time to access an Applet having Swing Components the first time?
Answer: Because behind every swing component are many Java objects and resources. This takes time to create them in memory. JDK 1.3 from Sun has some improvements which may lead to faster execution of Swing applications.



---------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------


http://www.techinterviews.com/java-interview-questions
Java interview questions
By admin | May 16, 2004
What are synchronized methods and synchronized statements? Synchronized methods are methods that are used to control access to an object. For example, a thread only executes a synchronized method after it has acquired the lock for the method’s object or class. Synchronized statements are similar to synchronized methods. A synchronized statement can only be executed after a thread has acquired the lock for the object or class referenced in the synchronized statement.
What are different ways in which a thread can enter the waiting state? A thread can enter the waiting state by invoking its sleep() method, blocking on I/O, unsuccessfully attempting to acquire an object’s lock, or invoking an object’s wait() method. It can also enter the waiting state by invoking its (deprecated) suspend() method.
Can a lock be acquired on a class? Yes, a lock can be acquired on a class. This lock is acquired on the class’s Class object.
What’s new with the stop(), suspend() and resume() methods in new JDK 1.2? The stop(), suspend() and resume() methods have been deprecated in JDK 1.2.
What is the preferred size of a component? The preferred size of a component is the minimum component size that will allow the component to display normally.
What method is used to specify a container’s layout? The setLayout() method is used to specify a container’s layout. For example, setLayout(new FlowLayout()); will be set the layout as FlowLayout.
Which containers use a FlowLayout as their default layout? The Panel and Applet classes use the FlowLayout as their default layout.
What state does a thread enter when it terminates its processing? When a thread terminates its processing, it enters the dead state.
What is the Collections API? The Collections API is a set of classes and interfaces that support operations on collections of objects. One example of class in Collections API is Vector and Set and List are examples of interfaces in Collections API.
What is the List interface? The List interface provides support for ordered collections of objects. It may or may not allow duplicate elements but the elements must be ordered.
How does Java handle integer overflows and underflows? It uses those low order bytes of the result that can fit into the size of the type allowed by the operation.
What is the Vector class? The Vector class provides the capability to implement a growable array of objects. The main visible advantage of this class is programmer needn’t to worry about the number of elements in the Vector.
What modifiers may be used with an inner class that is a member of an outer class? A (non-local) inner class may be declared as public, protected, private, static, final, or abstract.
If a method is declared as protected, where may the method be accessed? A protected method may only be accessed by classes or interfaces of the same package or by subclasses of the class in which it is declared.
What is an Iterator interface? The Iterator interface is used to step through the elements of a Collection.
How many bits are used to represent Unicode, ASCII, UTF-16, and UTF-8 characters? Unicode requires 16 bits, ASCII require 7 bits (although the ASCII character set uses only 7 bits, it is usually represented as 8 bits), UTF-8 represents characters using 8, 16, and 18 bit patterns, UTF-16 uses 16-bit and larger bit patterns
What is the difference between yielding and sleeping? Yielding means a thread returning to a ready state either from waiting, running or after creation, where as sleeping refers a thread going to a waiting state from running state. With reference to Java, when a task invokes its yield() method, it returns to the ready state and when a task invokes its sleep() method, it returns to the waiting state
What are wrapper classes? Wrapper classes are classes that allow primitive types to be accessed as objects. For example, Integer, Double. These classes contain many methods which can be used to manipulate basic data types
Does garbage collection guarantee that a program will not run out of memory? No, it doesn’t. It is possible for programs to use up memory resources faster than they are garbage collected. It is also possible for programs to create objects that are not subject to garbage collection. The main purpose of Garbage Collector is recover the memory from the objects which are no longer required when more memory is needed.
Name Component subclasses that support painting? The following classes support painting: Canvas, Frame, Panel, and Applet.
What is a native method? A native method is a method that is implemented in a language other than Java. For example, one method may be written in C and can be called in Java.
How can you write a loop indefinitely?
for(;;)	 //for loop
while(true);	//always true

Can an anonymous class be declared as implementing an interface and extending a class? An anonymous class may implement an interface or extend a superclass, but may not be declared to do both.
What is the purpose of finalization? The purpose of finalization is to give an unreachable object the opportunity to perform any cleanup processing before the object is garbage collected. For example, closing a opened file, closing a opened database Connection.
What invokes a thread’s run() method? After a thread is started, via its start() method or that of the Thread class, the JVM invokes the thread’s run() method when the thread is initially executed.
What is the GregorianCalendar class? The GregorianCalendar provides support for traditional Western calendars.
What is the SimpleTimeZone class? The SimpleTimeZone class provides support for a Gregorian calendar.
What is the Properties class? The properties class is a subclass of Hashtable that can be read from or written to a stream. It also provides the capability to specify a set of default values to be used.
What is the purpose of the Runtime class? The purpose of the Runtime class is to provide access to the Java runtime system.
What is the purpose of the System class? The purpose of the System class is to provide access to system resources.
What is the purpose of the finally clause of a try-catch-finally statement? The finally clause is used to provide the capability to execute code no matter whether or not an exception is thrown or caught. For example,
try
{
//some statements
}
catch
{
// statements when exception is cought
}
finally
{
//statements executed whether exception occurs or not
}

What is the Locale class? The Locale class is used to tailor program output to the conventions of a particular geographic, political, or cultural region.
What must a class do to implement an interface? It must provide all of the methods in the interface and identify the interface in its implements clause.



---------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------

http://www.techinterviews.com/large-collection-of-java-interview-questions
Large collection of Java interview questions

What is the difference between an Abstract class and Interface ?
What is user defined exception ?
What do you know about the garbage collector ?
What is the difference between C++ & Java ?
Explain RMI Architecture?
How do you communicate in between Applets & Servlets ?
What is the use of Servlets ?
What is JDBC? How do you connect to the Database ?
In an HTML form I have a Button which makes us to open another page in 15 seconds. How will do you that ?
What is the difference between Process and Threads ?
What is the difference between RMI & Corba ?
What are the services in RMI ?
How will you initialize an Applet ?
What is the order of method invocation in an Applet ?
When is update method called ?
How will you pass values from HTML page to the Servlet ?
Have you ever used HashTable and Dictionary ?
How will you communicate between two Applets ?
What are statements in JAVA ?
What is JAR file ?
What is JNI ?
What is the base class for all swing components ?
What is JFC ?
What is Difference between AWT and Swing ?
Considering notepad/IE or any other thing as process, What will happen if you start notepad or IE 3 times? Where 3 processes are started or 3 threads are started ?
How does thread synchronization occurs inside a monitor ?
How will you call an Applet using a Java Script function ?
Is there any tag in HTML to upload and download files ?
Why do you Canvas ?
How can you push data from an Applet to Servlet ?
What are 4 drivers available in JDBC ?
How you can know about drivers and database information ?
If you are truncated using JDBC, How can you know ..that how much data is truncated ?
And What situation , each of the 4 drivers used ?
How will you perform transaction using JDBC ?
In RMI, server object first loaded into the memory and then the stub reference is sent to the client ? or whether a stub reference is directly sent to the client ?
Suppose server object is not loaded into the memory, and the client request for it , what will happen?
What is serialization ?
Can you load the server object dynamically? If so, what are the major 3 steps involved in it ?
What is difference RMI registry and OSAgent ?
To a server method, the client wants to send a value 20, with this value exceeds to 20,. a message should be sent to the client ? What will you do for achieving for this ?
What are the benefits of Swing over AWT ?
Where the CardLayout is used ?
What is the Layout for ToolBar ?
What is the difference between Grid and GridbagLayout ?
How will you add panel to a Frame ?
What is the corresponding Layout for Card in Swing ?
What is light weight component ?
Can you run the product development on all operating systems ?
What is the webserver used for running the Servlets ?
What is Servlet API used for connecting database ?
What is bean ? Where it can be used ?
What is difference in between Java Class and Bean ?
Can we send object using Sockets ?
What is the RMI and Socket ?
How to communicate 2 threads each other ?
What are the files generated after using IDL to Java Compilet ?


---------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------


